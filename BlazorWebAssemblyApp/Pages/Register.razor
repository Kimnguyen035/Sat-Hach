@layout LoginLayout
@page "/register"
@using WebModels
@using BlazorWebAssemblyApp.Services

@inject IAuthService authService
@inject NavigationManager NavigationManager
@inject IToastService ToastService

<div class="card">
    <h4 class="card-header">Register</h4>
    <div class="card-body">
        <EditForm Model="user" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label for="Name">First Name</label>
                <InputText class="form-control" @bind-Value="user.FirstName"></InputText>
                <ValidationMessage For="() => user.FirstName"></ValidationMessage>
                <small id="nameHelp" class="form-text text-muted">Please enter product title here.</small>
            </div>
            <div class="form-group">
                <label for="Name">Last Name</label>
                <InputText class="form-control" @bind-Value="user.LastName"></InputText>
                <ValidationMessage For="() => user.LastName"></ValidationMessage>
                <small id="nameHelp" class="form-text text-muted">Please enter product title here.</small>
            </div>
            <div class="form-group">
                <label for="email">Email</label>
                <InputText id="email" class="form-control" @bind-Value="user.Email"></InputText>
                <ValidationMessage For="() => user.Email"></ValidationMessage>
                <small id="nameHelp" class="form-text text-muted">Please enter product title here.</small>
            </div>
            <div class="form-group">
                <label for="username">User Name</label>
                <InputText id="username" class="form-control" @bind-Value="user.UserName" />
                <ValidationMessage For="() => user.UserName"></ValidationMessage>
                <small id="nameHelp" class="form-text text-muted">Please enter product title here.</small>
            </div>
            <div class="form-group">
                <label for="Name">Password</label>
                <InputText type="password" class="form-control" @bind-Value="user.PassWordHash"></InputText>
                <ValidationMessage For="() => user.PassWordHash"></ValidationMessage>
                <small id="nameHelp" class="form-text text-muted">Please enter product title here.</small>
            </div>
            <div class="form-group">
                <label for="Name">Confirm Password</label>
                <InputText @bind-Value="user.PassWordConfirm" type="password" class="form-control"></InputText>
                <ValidationMessage For="() => user.PassWordConfirm"></ValidationMessage>
                <small id="nameHelp" class="form-text text-muted">Please enter product title here.</small>
            </div>
            <button type="submit" class="btn btn-primary">Register</button>
        </EditForm>
    </div>
</div>

@code {
    private RegisterUser user = new RegisterUser();

    private string setValue { get; set; }

    private async Task OnValidSubmit()
    {
        if (user.PassWordHash != user.PassWordConfirm)
        {
            ToastService.ShowError($"Password incorrect!", "Error");
        }
        else
        {
            var result = await authService.Register(user);
            if (result)
            {
                ToastService.ShowSuccess($"{user.UserName} has been created successfully.", "Success");
                NavigationManager.NavigateTo("/login");
            }
            else
            {
                ToastService.ShowError($"An error occurred in progress. Please contact to administrator.", "Error");
            }
        }
    }
}
